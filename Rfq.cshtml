@{
    ViewData["Title"] = "Rfq";
}
@model List<Rfq>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hospital Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
        }

        .modal {
            display: none;
        }

        .modal-overlay {
            background-color: rgba(0, 0, 0, 0.5);
        }
    </style>
</head>
<body class="min-h-screen flex items-center justify-center bg-gray-100 p-4">

    <div id="login-page" class="w-full max-w-md bg-white rounded-xl shadow-2xl p-8 transform transition-transform duration-500 scale-100">
        <div class="text-center">
            <h1 class="text-3xl font-bold text-gray-800 mb-2">Hospital RFQ Dashboard</h1>
            <p class="text-gray-500 mb-6">Please log in to continue</p>
        </div>
        <form id="login-form">
            <div class="mb-4">
                <label for="username" class="block text-gray-700 text-sm font-semibold mb-2">Username</label>
                <input type="text" id="username" name="username" placeholder="admin"
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
                       value="admin" required>
            </div>
            <div class="mb-6">
                <label for="password" class="block text-gray-700 text-sm font-semibold mb-2">Password</label>
                <input type="password" id="password" name="password" placeholder="password"
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
                       value="password" required>
            </div>
            <button type="submit"
                    class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg focus:outline-none focus:ring-4 focus:ring-blue-300 transition-all transform hover:scale-105">
                Login
            </button>
        </form>
    </div>

    <div id="dashboard" class="hidden w-full h-full p-4 overflow-auto">
        <header class="bg-white rounded-xl shadow-lg p-6 mb-6 flex flex-col md:flex-row justify-between items-center">
            <h2 class="text-3xl font-bold text-gray-800">Hospital Management Dashboard</h2>
            <div class="flex items-center space-x-4 mt-4 md:mt-0">
                <button id="create-rfq-button"
                        class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg focus:outline-none focus:ring-4 focus:ring-blue-300 transition-all transform hover:scale-105">
                    Create RFQ
                </button>
                <span class="text-lg font-medium text-gray-700">Welcome, Admin</span>
                <button id="logout-button"
                        class="bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded-lg focus:outline-none focus:ring-4 focus:ring-red-300 transition-all transform hover:scale-105">
                    Logout
                </button>
            </div>
        </header>

        <main>
            <div class="bg-white rounded-xl shadow-lg p-6">
                <h3 class="text-2xl font-bold text-gray-800 mb-4">Request for Quotation (RFQ) List</h3>
                <div id="rfq-container" class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
                </div>
            </div>
        </main>
    </div>

    <div id="create-rfq-modal" class="modal fixed inset-0 flex items-center justify-center z-50">
        <div class="modal-overlay absolute inset-0 w-full h-full bg-gray-900 opacity-50"></div>
        <div class="modal-content w-11/12 md:max-w-md mx-auto bg-white rounded-xl shadow-lg z-50 p-6">
            <div class="flex justify-between items-center pb-3">
                <p class="text-2xl font-bold">Create New RFQ</p>
                <div class="modal-close cursor-pointer z-50" id="create-rfq-modal-close">
                    <svg class="fill-current text-black" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                        <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
                    </svg>
                </div>
            </div>
            <form asp-action="Rfq" method="post" id="create-rfq-form">
                <div class="mb-4">
                    <label for="rfq-id" class="block text-gray-700 text-sm font-semibold mb-2">RFQ ID</label>
                    <input type="text" id="rfq-id" name="rfqId" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                </div>
                <div class="mb-4">
                    <label for="item-name" class="block text-gray-700 text-sm font-semibold mb-2">Item Name</label>
                    <input type="text" id="item-name" name="item" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                </div>
                <div class="mb-4">
                    <label for="quantity" class="block text-gray-700 text-sm font-semibold mb-2">Quantity</label>
                    <input type="number" id="quantity" name="quantity" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                </div>
                <div class="mb-4">
                    <label for="due-date" class="block text-gray-700 text-sm font-semibold mb-2">Due Date</label>
                    <input type="date" id="due-date" name="dueDate" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                </div>
                <div class="mb-6">
                    <label for="status" class="block text-gray-700 text-sm font-semibold mb-2">Status</label>
                    <select id="status" name="status" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                        <option value="Pending">Pending</option>
                        <option value="Approved">Approved</option>
                        <option value="Rejected">Rejected</option>
                    </select>
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" id="cancel-create-button" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg focus:outline-none transition-all">
                        Cancel
                    </button>
                    <button type="submit" id="save-rfq-button" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:ring-4 focus:ring-blue-300 transition-all">
                        Save RFQ
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div id="message-modal" class="modal fixed inset-0 flex items-center justify-center z-50">
        <div class="modal-overlay absolute inset-0 w-full h-full bg-gray-900 opacity-50"></div>
        <div class="modal-content w-11/12 md:max-w-md mx-auto bg-white rounded-xl shadow-lg z-50 p-6">
            <div class="flex justify-between items-center pb-3">
                <p class="text-2xl font-bold">Message</p>
                <div class="modal-close cursor-pointer z-50" id="message-modal-close">
                    <svg class="fill-current text-black" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                        <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
                    </svg>
                </div>
            </div>
            <div id="modal-message-text" class="mb-4"></div>
            <div class="flex justify-end">
                <button id="close-message-modal-button" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:ring-4 focus:ring-blue-300 transition-all">
                    OK
                </button>
            </div>
        </div>
    </div>

    <div id="delete-confirm-modal" class="modal fixed inset-0 flex items-center justify-center z-50">
        <div class="modal-overlay absolute inset-0 w-full h-full bg-gray-900 opacity-50"></div>
        <div class="modal-content w-11/12 md:max-w-sm mx-auto bg-white rounded-xl shadow-lg z-50 p-6">
            <div class="text-center">
                <p class="text-2xl font-bold mb-4">Confirm Deletion</p>
                <p class="text-gray-700 mb-6">Are you sure you want to delete this RFQ? This action cannot be undone.</p>
                <div class="flex justify-end space-x-4">
                    <button id="cancel-delete-button" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg focus:outline-none transition-all">
                        Cancel
                    </button>
                    <form asp-action="Delete" asp-controller="Home" method="post" id="delete-form" class="inline-block">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" id="delete-rfq-id" value="" />
                        <button type="submit" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:ring-4 focus:ring-red-300 transition-all">
                            Delete
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <script>
        const rfqData = @Html.Raw(Json.Serialize(Model ?? new List<Rfq>()));

        document.addEventListener('DOMContentLoaded', () => {
            const loginPage = document.getElementById('login-page');
            const dashboard = document.getElementById('dashboard');
            const loginForm = document.getElementById('login-form');
            const logoutButton = document.getElementById('logout-button');
            const rfqContainer = document.getElementById('rfq-container');
            const messageModal = document.getElementById('message-modal');
            const modalMessageText = document.getElementById('modal-message-text');
            const closeMessageModalButton = document.getElementById('close-message-modal-button');
            const messageModalCloseIcon = document.getElementById('message-modal-close');
            const createRfqModal = document.getElementById('create-rfq-modal');
            const createRfqButton = document.getElementById('create-rfq-button');
            const createRfqForm = document.getElementById('create-rfq-form');
            const createRfqModalCloseIcon = document.getElementById('create-rfq-modal-close');
            const cancelCreateButton = document.getElementById('cancel-create-button');

            
            const deleteConfirmModal = document.getElementById('delete-confirm-modal');
            const deleteForm = document.getElementById('delete-form');
            const deleteRfqIdInput = document.getElementById('delete-rfq-id');
            const cancelDeleteButton = document.getElementById('cancel-delete-button');

            function showMessage(message) {
                modalMessageText.textContent = message;
                messageModal.style.display = 'flex';
            }

            function hideMessage() {
                messageModal.style.display = 'none';
            }

            function showCreateRfqModal() {
                createRfqModal.style.display = 'flex';
            }

            function hideCreateRfqModal() {
                createRfqModal.style.display = 'none';
                createRfqForm.reset();
            }

            function showDeleteConfirmModal(rfqId) {
                deleteRfqIdInput.value = rfqId;
                deleteConfirmModal.style.display = 'flex';
            }

            function hideDeleteConfirmModal() {
                deleteConfirmModal.style.display = 'none';
                deleteRfqIdInput.value = '';
            }

            function createRfqCard(rfq) {
                let statusColor = '';
                switch (rfq.status) {
                    case 'Pending':
                        statusColor = 'bg-yellow-100 text-yellow-800';
                        break;
                    case 'Approved':
                        statusColor = 'bg-green-100 text-green-800';
                        break;
                    case 'Rejected':
                        statusColor = 'bg-red-100 text-red-800';
                        break;
                    default:
                        statusColor = 'bg-gray-100 text-gray-800';
                        break;
                }

                return `
                    <div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-blue-500 hover:shadow-xl transition-shadow duration-300">
                        <div class="flex justify-between items-center mb-3">
                            <h4 class="text-xl font-semibold text-gray-800">${rfq.item}</h4>
                            <span class="text-sm font-medium ${statusColor} px-3 py-1 rounded-full">${rfq.status}</span>
                        </div>
                        <div class="text-gray-600 space-y-1 mb-4">
                            <p><span class="font-semibold">RFQ ID:</span> ${rfq.rfqId}</p>
                            <p><span class="font-semibold">Quantity:</span> ${rfq.quantity}</p>
                            <p><span class="font-semibold">Due Date:</span> ${new Date(rfq.dueDate).toLocaleDateString()}</p>
                        </div>
                        <div class="flex space-x-2">
                            <a href="/Home/Edit/${rfq.id}" class="edit-rfq-button w-full bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded-lg text-center transition-colors">
                                Edit
                            </a>
                            <button type="button" data-id="${rfq.id}" class="delete-rfq-button w-full bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg transition-colors">
                                Delete
                            </button>
                        </div>
                    </div>
                `;
            }

            function renderRfqList() {
                if (rfqContainer) {
                    rfqContainer.innerHTML = rfqData.map(createRfqCard).join('');

                    
                    document.querySelectorAll('.delete-rfq-button').forEach(button => {
                        button.addEventListener('click', (e) => {
                            const rfqId = e.target.getAttribute('data-id');
                            showDeleteConfirmModal(rfqId);
                        });
                    });
                }
            }

            loginForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const username = e.target.username.value;
                const password = e.target.password.value;

                if (username === 'admin' && password === 'password') {
                    loginPage.classList.add('hidden');
                    dashboard.classList.remove('hidden');
                    renderRfqList();
                } else {
                    showMessage('Invalid username or password.');
                }
            });

            logoutButton.addEventListener('click', () => {
                dashboard.classList.add('hidden');
                loginPage.classList.remove('hidden');
                loginForm.reset();
            });

            closeMessageModalButton.addEventListener('click', hideMessage);
            messageModalCloseIcon.addEventListener('click', hideMessage);

            cancelDeleteButton.addEventListener('click', hideDeleteConfirmModal);

            createRfqButton.addEventListener('click', showCreateRfqModal);
            createRfqModalCloseIcon.addEventListener('click', hideCreateRfqModal);
            cancelCreateButton.addEventListener('click', hideCreateRfqModal);
        });
    </script>
</body>
</html>